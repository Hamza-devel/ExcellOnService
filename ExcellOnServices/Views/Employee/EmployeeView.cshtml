@model ExcellOnServices.Models.EmployeeMod

@{
    ViewBag.Title = "EmployeeView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h1>Employee Form</h1>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Employee_Id, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Employee_Id, new { htmlAttributes = new { @class = "form-control", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.Employee_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control ", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control ", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cell_No, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Cell_No, new { htmlAttributes = new { @class = "form-control ", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.Cell_No, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control ", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Addrerss, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Addrerss, new { htmlAttributes = new { @class = "form-control ", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.Addrerss, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group textLeft col-md-5">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-8 textLeft", required = "required" })
        <div class="form-group col-md-16">
            @Html.DropDownListFor(model => model.Department, (IEnumerable<SelectListItem>)TempData["abc"], new { @class = "form-control selectSignUp", required = "required", placeholder = "Select" })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger", required = "required" })
        </div>
    </div>
    <div class="form-group textLeft col-md-5">
        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-8 textLeft", required = "required" })
        <div class="form-group col-md-16">
            @Html.DropDownListFor(model => model.Designation, (IEnumerable<SelectListItem>)TempData["xyz"], new { @class = "form-control selectSignUp", required = "required", placeholder = "Select" })
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger", required = "required" })
        </div>
    </div>
    <div class="form-group textLeft col-md-5">
        @Html.LabelFor(model => model.Services, htmlAttributes: new { @class = "control-label col-md-8 textLeft", required = "required" })
        <div class="form-group col-md-16">
            @Html.DropDownListFor(model => model.Services, (IEnumerable<SelectListItem>)TempData["pqr"], new { @class = "form-control selectSignUp", required = "required", placeholder = "Select" })
            @Html.ValidationMessageFor(model => model.Services, "", new { @class = "text-danger", required = "required" })
        </div>
    </div>













    <div class="form-group">
        @Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { @class = "form-control ", Required = "Required" } })
            @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
        </div>
    </div>







    <div class="form-inline mx-auto search-form">

        <button class="btn btn-style my-2 my-sm-0" type="submit" style="margin-left:15px">Add</button>
    </div>
</div>
}
